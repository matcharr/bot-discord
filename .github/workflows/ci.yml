permissions:
  contents: read
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      REPORT_CHANNEL_ID: ${{ secrets.REPORT_CHANNEL_ID }}
      COMMAND_PREFIX: ${{ vars.COMMAND_PREFIX }}
      CASE_INSENSITIVE: ${{ vars.CASE_INSENSITIVE }}
      MAX_WARNINGS_BEFORE_ACTION: ${{ vars.MAX_WARNINGS_BEFORE_ACTION }}
      ENABLE_AUDIT_LOGGING: ${{ vars.ENABLE_AUDIT_LOGGING }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r project/requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 project/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 project/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type check with mypy
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/project"
        mypy project/ --ignore-missing-imports --no-error-summary || true
    
    - name: Test with pytest
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/project"
        pytest --cov=project/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml