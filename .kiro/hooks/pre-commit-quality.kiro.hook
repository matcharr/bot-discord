{
  "enabled": true,
  "name": "Pre-Commit Quality Gate",
  "description": "Runs lightweight quality checks before git commits. Executes fast formatting and linting checks. If database files are modified, also runs make test-db. Validates commit messages follow conventional commit format. Provides SKIP_HOOKS=1 override for emergencies.",
  "version": "2",
  "when": {
    "type": "fileEdited",
    "patterns": [
      ".git/COMMIT_EDITMSG"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "A git commit is about to be made. You need to run lightweight pre-commit checks:\n\n1. **Check for override**: If SKIP_HOOKS=1 environment variable is set, allow commit immediately with warning message\n\n2. **Fast quality checks**: Run `make format` and `flake8 project/ tests/` (lightweight, ~5-10s)\n\n3. **Conditional DB tests**: Check if any files in `project/database/` were modified in this commit:\n   - If YES: Run `make test-db` \n   - If NO: Skip DB tests\n   - Use `git diff --cached --name-only` to check staged files\n\n4. **Commit message validation**: Validate .git/COMMIT_EDITMSG follows conventional commit format (feat:, fix:, docs:, refactor:, test:, chore:, etc.)\n\n5. **Results**: \n   - If ANY checks fail: Block commit and explain what needs fixing\n   - If all pass: Allow commit\n   - Remind user that full security/quality checks run at pre-push\n\n**Emergency override**: Developers can use `SKIP_HOOKS=1 git commit` to bypass for urgent fixes.\n\nKeep it fast - this should complete in under 30 seconds for most commits."
  }
}
